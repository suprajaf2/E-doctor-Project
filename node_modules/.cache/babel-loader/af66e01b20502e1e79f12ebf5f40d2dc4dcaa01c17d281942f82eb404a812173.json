{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\sections\\\\AdminList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AdminList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminList() {\n  _s();\n  const [admins, setAdmins] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch data from the backend API (Replace this with actual API call)\n  useEffect(() => {\n    const fetchAdmins = async () => {\n      try {\n        const response = await fetch('/api/admins'); // Replace with actual API endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch admin data');\n        }\n        const data = await response.json();\n        setAdmins(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchAdmins();\n  }, []);\n\n  // Handle delete of admin\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/api/admins/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setAdmins(admins.filter(admin => admin.id !== id));\n      } else {\n        throw new Error('Failed to delete admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Handle edit of admin role\n  const handleEdit = async id => {\n    const newRole = prompt('Enter new role for admin:');\n    if (newRole) {\n      try {\n        const response = await fetch(`/api/admins/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            role: newRole\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update admin role');\n        }\n        const updatedAdmin = await response.json();\n        setAdmins(admins.map(admin => admin.id === id ? {\n          ...admin,\n          role: updatedAdmin.role\n        } : admin));\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading admin list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(admin.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(admin.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, admin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminList, \"L4+DfLPmDikQmdbwdmIsQZFv1tk=\");\n_c = AdminList;\nexport default AdminList;\nvar _c;\n$RefreshReg$(_c, \"AdminList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminList","_s","admins","setAdmins","loading","setLoading","error","setError","fetchAdmins","response","fetch","ok","Error","data","json","message","handleDelete","id","method","filter","admin","handleEdit","newRole","prompt","headers","body","JSON","stringify","role","updatedAdmin","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","email","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/sections/AdminList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './AdminList.css';\r\n\r\nfunction AdminList() {\r\n  const [admins, setAdmins] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch data from the backend API (Replace this with actual API call)\r\n  useEffect(() => {\r\n    const fetchAdmins = async () => {\r\n      try {\r\n        const response = await fetch('/api/admins'); // Replace with actual API endpoint\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch admin data');\r\n        }\r\n        const data = await response.json();\r\n        setAdmins(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAdmins();\r\n  }, []);\r\n\r\n  // Handle delete of admin\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`/api/admins/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        setAdmins(admins.filter(admin => admin.id !== id));\r\n      } else {\r\n        throw new Error('Failed to delete admin');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Handle edit of admin role\r\n  const handleEdit = async (id) => {\r\n    const newRole = prompt('Enter new role for admin:');\r\n    if (newRole) {\r\n      try {\r\n        const response = await fetch(`/api/admins/${id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ role: newRole }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to update admin role');\r\n        }\r\n        const updatedAdmin = await response.json();\r\n        setAdmins(admins.map(admin => \r\n          admin.id === id ? { ...admin, role: updatedAdmin.role } : admin\r\n        ));\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading admin list...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-list-container\">\r\n      <h2>Admin List</h2>\r\n      <table className=\"admin-list-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {admins.map((admin) => (\r\n            <tr key={admin.id}>\r\n              <td>{admin.name}</td>\r\n              <td>{admin.email}</td>\r\n              <td>{admin.role}</td>\r\n              <td>\r\n                <button onClick={() => handleEdit(admin.id)}>Edit</button>\r\n                <button onClick={() => handleDelete(admin.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}