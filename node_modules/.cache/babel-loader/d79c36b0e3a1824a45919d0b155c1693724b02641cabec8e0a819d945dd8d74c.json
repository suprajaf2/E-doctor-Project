{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! How can I assist you today? Please select an option below.'\n  }]);\n\n  // Predefined Questions and Answers\n  const questionsAndAnswers = [{\n    question: 'How do I register?',\n    answer: 'To register, visit the registration page and fill in your details.'\n  }, {\n    question: 'How do I log in?',\n    answer: 'Use your registered email and password to log in on the login page.'\n  }, {\n    question: 'How do I book an appointment?',\n    answer: 'Log in to your account, select a doctor, and book an available slot.'\n  }, {\n    question: 'How do I reset my password?',\n    answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.'\n  }];\n\n  // Toggle chatbot visibility\n  const toggleChatbot = () => setIsOpen(!isOpen);\n\n  // Handle question selection\n  const handleQuestionClick = qa => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: qa.question\n    }, {\n      sender: 'bot',\n      text: qa.answer\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-trigger\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-chatbot-btn\",\n        onClick: toggleChatbot,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chatbot-label\",\n        children: \"Chat with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"Chat with Us\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleChatbot,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-footer\",\n        children: questionsAndAnswers.map((qa, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-question-btn\",\n          onClick: () => handleQuestionClick(qa),\n          children: qa.question\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"F2Ivtxjt8m4hk5agyoBIlZDdnV8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","sender","text","questionsAndAnswers","question","answer","toggleChatbot","handleQuestionClick","qa","prev","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Hi! How can I assist you today? Please select an option below.' },\r\n  ]);\r\n\r\n  // Predefined Questions and Answers\r\n  const questionsAndAnswers = [\r\n    { question: 'How do I register?', answer: 'To register, visit the registration page and fill in your details.' },\r\n    { question: 'How do I log in?', answer: 'Use your registered email and password to log in on the login page.' },\r\n    { question: 'How do I book an appointment?', answer: 'Log in to your account, select a doctor, and book an available slot.' },\r\n    { question: 'How do I reset my password?', answer: 'Click on the \"Forgot Password\" link on the login page and follow the instructions.' },\r\n  ];\r\n\r\n  // Toggle chatbot visibility\r\n  const toggleChatbot = () => setIsOpen(!isOpen);\r\n\r\n  // Handle question selection\r\n  const handleQuestionClick = (qa) => {\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'user', text: qa.question },\r\n      { sender: 'bot', text: qa.answer },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Chatbot Trigger */}\r\n      <div className=\"chatbot-trigger\">\r\n        <button className=\"open-chatbot-btn\" onClick={toggleChatbot}>\r\n          <i className=\"fas fa-comments\"></i>\r\n        </button>\r\n        <p className=\"chatbot-label\">Chat with Us</p>\r\n      </div>\r\n\r\n      {/* Chatbot Container */}\r\n      {isOpen && (\r\n        <div className=\"chatbot-container\">\r\n          <div className=\"chatbot-header\">\r\n            Chat with Us\r\n            <span onClick={toggleChatbot}>X</span>\r\n          </div>\r\n          <div className=\"chatbot-body\">\r\n            {messages.map((msg, i) => (\r\n              <div key={i} className={`chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"chatbot-footer\">\r\n            {questionsAndAnswers.map((qa, i) => (\r\n              <button key={i} className=\"chatbot-question-btn\" onClick={() => handleQuestionClick(qa)}>\r\n                {qa.question}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}