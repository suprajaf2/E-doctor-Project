{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // Track if the chatbot is open or closed\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Welcome! How can I assist you today?'\n  }]);\n  const questionsAndAnswers = [{\n    question: 'What is E-Doctor?',\n    answer: 'E-Doctor is an online health consultation platform.'\n  }, {\n    question: 'How can I register?',\n    answer: 'Go to the Register page and fill in the required details.'\n  }, {\n    question: 'How do I book an appointment?',\n    answer: 'Log in, navigate to the Appointments page, and select a time slot.'\n  }, {\n    question: 'How do I contact support?',\n    answer: 'Use the Contact Us page to reach our support team.'\n  }];\n  const handleQuestionClick = selectedQuestion => {\n    setMessages(prevMessages => [...prevMessages, {\n      sender: 'user',\n      text: selectedQuestion.question\n    }, {\n      sender: 'bot',\n      text: selectedQuestion.answer\n    }]);\n  };\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen); // Toggle chatbot visibility\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"E-Doctor Chatbot\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-chatbot-btn\",\n          onClick: toggleChatbot,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-questions\",\n        children: questionsAndAnswers.map((qa, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-question-btn\",\n          onClick: () => handleQuestionClick(qa),\n          children: qa.question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-chatbot-btn\",\n      onClick: toggleChatbot,\n      children: \"Chat with us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"hRWGspdXfDIjvomuIcsMhgPz3Kg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","sender","text","questionsAndAnswers","question","answer","handleQuestionClick","selectedQuestion","prevMessages","toggleChatbot","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","qa","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [isOpen, setIsOpen] = useState(false); // Track if the chatbot is open or closed\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Welcome! How can I assist you today?' },\r\n  ]);\r\n\r\n  const questionsAndAnswers = [\r\n    { question: 'What is E-Doctor?', answer: 'E-Doctor is an online health consultation platform.' },\r\n    { question: 'How can I register?', answer: 'Go to the Register page and fill in the required details.' },\r\n    { question: 'How do I book an appointment?', answer: 'Log in, navigate to the Appointments page, and select a time slot.' },\r\n    { question: 'How do I contact support?', answer: 'Use the Contact Us page to reach our support team.' },\r\n  ];\r\n\r\n  const handleQuestionClick = (selectedQuestion) => {\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { sender: 'user', text: selectedQuestion.question },\r\n      { sender: 'bot', text: selectedQuestion.answer },\r\n    ]);\r\n  };\r\n\r\n  const toggleChatbot = () => {\r\n    setIsOpen(!isOpen); // Toggle chatbot visibility\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className=\"chatbot-container\">\r\n          <div className=\"chatbot-header\">\r\n            E-Doctor Chatbot\r\n            <button className=\"close-chatbot-btn\" onClick={toggleChatbot}>X</button>\r\n          </div>\r\n          <div className=\"chatbot-messages\">\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`chatbot-message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`}\r\n              >\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"chatbot-questions\">\r\n            {questionsAndAnswers.map((qa, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"chatbot-question-btn\"\r\n                onClick={() => handleQuestionClick(qa)}\r\n              >\r\n                {qa.question}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!isOpen && (\r\n        <button className=\"open-chatbot-btn\" onClick={toggleChatbot}>\r\n          Chat with us\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}