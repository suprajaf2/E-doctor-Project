{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hi! How can I assist you today?'\n  }]);\n  const questionsAndAnswers = [{\n    question: 'What is E-Doctor?',\n    answer: 'E-Doctor is a health consultation platform.'\n  }, {\n    question: 'How do I register?',\n    answer: 'Visit the registration page to sign up.'\n  }, {\n    question: 'How do I book an appointment?',\n    answer: 'Log in to your account and book a slot.'\n  }];\n  const handleQuestionClick = qa => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: qa.question\n    }, {\n      sender: 'bot',\n      text: qa.answer\n    }]);\n  };\n  const toggleChatbot = () => setIsOpen(!isOpen);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"Chat with Us\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleChatbot,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-footer\",\n        children: questionsAndAnswers.map((qa, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-question-btn\",\n          onClick: () => handleQuestionClick(qa),\n          children: qa.question\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-chatbot-btn\",\n      onClick: toggleChatbot,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"al+WJ1pUc6KQbD+g5JIjVnFVAqA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","sender","text","questionsAndAnswers","question","answer","handleQuestionClick","qa","prev","toggleChatbot","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Hi! How can I assist you today?' },\r\n  ]);\r\n\r\n  const questionsAndAnswers = [\r\n    { question: 'What is E-Doctor?', answer: 'E-Doctor is a health consultation platform.' },\r\n    { question: 'How do I register?', answer: 'Visit the registration page to sign up.' },\r\n    { question: 'How do I book an appointment?', answer: 'Log in to your account and book a slot.' },\r\n  ];\r\n\r\n  const handleQuestionClick = (qa) => {\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'user', text: qa.question },\r\n      { sender: 'bot', text: qa.answer },\r\n    ]);\r\n  };\r\n\r\n  const toggleChatbot = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <>\r\n      <div className={`chatbot-container ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"chatbot-header\">\r\n          Chat with Us\r\n          <span onClick={toggleChatbot}>X</span>\r\n        </div>\r\n        <div className=\"chatbot-body\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`}>\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chatbot-footer\">\r\n          {questionsAndAnswers.map((qa, i) => (\r\n            <button key={i} className=\"chatbot-question-btn\" onClick={() => handleQuestionClick(qa)}>\r\n              {qa.question}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button className=\"open-chatbot-btn\" onClick={toggleChatbot}>\r\n        <i className=\"fas fa-comments\"></i>\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}