{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const navigate = useNavigate();\n\n  // Hardcoded admin credentials\n  const adminCredentials = {\n    username: 'admin',\n    password: 'admin123'\n  };\n\n  // Handle forgot password logic\n  const handleForgotPassword = () => {\n    if (email) {\n      // Simple email format validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (emailRegex.test(email)) {\n        alert(`Password reset link has been sent to ${email}`);\n        setShowForgotPassword(false);\n      } else {\n        alert('Please enter a valid email address.');\n      }\n    } else {\n      alert('Please enter your email address.');\n    }\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Check for admin login\n    if (username === adminCredentials.username && password === adminCredentials.password) {\n      alert('Admin login successful!');\n      localStorage.setItem('adminDetails', JSON.stringify({\n        username: adminCredentials.username,\n        role: 'Admin'\n      }));\n      navigate('/dashboard');\n      return;\n    }\n\n    // Retrieve user data from localStorage\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n\n    // Validate user credentials\n    if (storedUser && storedUser.username === username && storedUser.password === password) {\n      alert('Login successful!');\n      navigate('/dashboard');\n    } else {\n      alert('Invalid username or password!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setShowForgotPassword(true),\n        className: \"forgot-password-button\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), showForgotPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter your email to reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleForgotPassword,\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setShowForgotPassword(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"jfQaB3WBNuxAxyO4duRUeuhwXRw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","email","setEmail","showForgotPassword","setShowForgotPassword","navigate","adminCredentials","handleForgotPassword","emailRegex","test","alert","handleLogin","e","preventDefault","localStorage","setItem","JSON","stringify","role","storedUser","parse","getItem","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","target","required","href","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Hardcoded admin credentials\r\n  const adminCredentials = {\r\n    username: 'admin',\r\n    password: 'admin123',\r\n  };\r\n\r\n  // Handle forgot password logic\r\n  const handleForgotPassword = () => {\r\n    if (email) {\r\n      // Simple email format validation\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (emailRegex.test(email)) {\r\n        alert(`Password reset link has been sent to ${email}`);\r\n        setShowForgotPassword(false);\r\n      } else {\r\n        alert('Please enter a valid email address.');\r\n      }\r\n    } else {\r\n      alert('Please enter your email address.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check for admin login\r\n    if (username === adminCredentials.username && password === adminCredentials.password) {\r\n      alert('Admin login successful!');\r\n      localStorage.setItem(\r\n        'adminDetails',\r\n        JSON.stringify({ username: adminCredentials.username, role: 'Admin' })\r\n      );\r\n      navigate('/dashboard');\r\n      return;\r\n    }\r\n\r\n    // Retrieve user data from localStorage\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // Validate user credentials\r\n    if (storedUser && storedUser.username === username && storedUser.password === password) {\r\n      alert('Login successful!');\r\n      navigate('/dashboard');\r\n    } else {\r\n      alert('Invalid username or password!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h2>Login</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        <p>New user? <a href=\"/register\">Register here</a></p>\r\n\r\n        {/* Forgot Password Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setShowForgotPassword(true)}\r\n          className=\"forgot-password-button\"\r\n        >\r\n          Forgot Password?\r\n        </button>\r\n      </form>\r\n\r\n      {/* Forgot Password Form */}\r\n      {showForgotPassword && (\r\n        <div className=\"forgot-password-form\">\r\n          <h3>Enter your email to reset password</h3>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={handleForgotPassword}>\r\n            Send Reset Link\r\n          </button>\r\n          <button type=\"button\" onClick={() => setShowForgotPassword(false)}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}