{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Welcome! How can I assist you today?'\n  }]);\n\n  // Predefined questions and answers\n  const questionsAndAnswers = [{\n    question: 'What is E-Doctor?',\n    answer: 'E-Doctor is an online health consultation platform.'\n  }, {\n    question: 'How can I register?',\n    answer: 'Go to the Register page and fill in the required details.'\n  }, {\n    question: 'How do I book an appointment?',\n    answer: 'Log in, navigate to the Appointments page, and select a time slot.'\n  }, {\n    question: 'How do I contact support?',\n    answer: 'Use the Contact Us page to reach our support team.'\n  }];\n\n  // Handle user selecting a question\n  const handleQuestionClick = selectedQuestion => {\n    // Add the question to the message history\n    setMessages(prevMessages => [...prevMessages, {\n      sender: 'user',\n      text: selectedQuestion.question\n    }, {\n      sender: 'bot',\n      text: selectedQuestion.answer\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"E-Doctor Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot-message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-questions\",\n      children: questionsAndAnswers.map((qa, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-question-btn\",\n        onClick: () => handleQuestionClick(qa),\n        children: qa.question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"UTTEU4qChseu1d56MTHcq8KBcs8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","questionsAndAnswers","question","answer","handleQuestionClick","selectedQuestion","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","qa","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: 'Welcome! How can I assist you today?' },\r\n  ]);\r\n\r\n  // Predefined questions and answers\r\n  const questionsAndAnswers = [\r\n    { question: 'What is E-Doctor?', answer: 'E-Doctor is an online health consultation platform.' },\r\n    { question: 'How can I register?', answer: 'Go to the Register page and fill in the required details.' },\r\n    { question: 'How do I book an appointment?', answer: 'Log in, navigate to the Appointments page, and select a time slot.' },\r\n    { question: 'How do I contact support?', answer: 'Use the Contact Us page to reach our support team.' },\r\n  ];\r\n\r\n  // Handle user selecting a question\r\n  const handleQuestionClick = (selectedQuestion) => {\r\n    // Add the question to the message history\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { sender: 'user', text: selectedQuestion.question },\r\n      { sender: 'bot', text: selectedQuestion.answer },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">E-Doctor Chatbot</div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chatbot-message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-questions\">\r\n        {questionsAndAnswers.map((qa, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"chatbot-question-btn\"\r\n            onClick={() => handleQuestionClick(qa)}\r\n          >\r\n            {qa.question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACvC;IAAEO,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAuC,CAAC,CAChE,CAAC;;EAEF;EACA,MAAMC,mBAAmB,GAAG,CAC1B;IAAEC,QAAQ,EAAE,mBAAmB;IAAEC,MAAM,EAAE;EAAsD,CAAC,EAChG;IAAED,QAAQ,EAAE,qBAAqB;IAAEC,MAAM,EAAE;EAA4D,CAAC,EACxG;IAAED,QAAQ,EAAE,+BAA+B;IAAEC,MAAM,EAAE;EAAqE,CAAC,EAC3H;IAAED,QAAQ,EAAE,2BAA2B;IAAEC,MAAM,EAAE;EAAqD,CAAC,CACxG;;EAED;EACA,MAAMC,mBAAmB,GAAIC,gBAAgB,IAAK;IAChD;IACAP,WAAW,CAAEQ,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;MAAEP,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEK,gBAAgB,CAACH;IAAS,CAAC,EACnD;MAAEH,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEK,gBAAgB,CAACF;IAAO,CAAC,CACjD,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDlB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BX,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA;QAEEa,SAAS,EAAE,mBAAmBO,OAAO,CAACf,MAAM,KAAK,KAAK,GAAG,aAAa,GAAG,cAAc,EAAG;QAAAS,QAAA,EAEzFM,OAAO,CAACd;MAAI,GAHRe,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BP,mBAAmB,CAACY,GAAG,CAAC,CAACG,EAAE,EAAED,KAAK,kBACjCrB,OAAA;QAEEa,SAAS,EAAC,sBAAsB;QAChCU,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACY,EAAE,CAAE;QAAAR,QAAA,EAEtCQ,EAAE,CAACd;MAAQ,GAJPa,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAjDQD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAmDhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}