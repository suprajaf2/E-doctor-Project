{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Contact.css';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [step, setStep] = useState('main'); // Step: 'main' (categories), 'sub' (questions)\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Main categories\n  const categories = ['Login', 'Register', 'Password', 'Appointment'];\n\n  // Questions and answers based on categories\n  const questions = {\n    Login: [{\n      question: 'How do I log in?',\n      answer: 'Use your registered email and password to log in.'\n    }, {\n      question: 'I forgot my login details.',\n      answer: 'Click \"Forgot Password\" on the login page to recover your credentials.'\n    }],\n    Register: [{\n      question: 'How do I register?',\n      answer: 'Click the \"Register\" button on the home page and fill out the form.'\n    }, {\n      question: 'Why should I register?',\n      answer: 'Registration gives you access to personalized services and appointment bookings.'\n    }],\n    Password: [{\n      question: 'How do I reset my password?',\n      answer: 'Go to the login page and click \"Forgot Password\" to reset it.'\n    }, {\n      question: 'How can I change my password?',\n      answer: 'Log in to your account, go to settings, and select \"Change Password\".'\n    }],\n    Appointment: [{\n      question: 'How do I book an appointment?',\n      answer: 'Log in, select a doctor, and choose a time slot to book an appointment.'\n    }, {\n      question: 'Can I cancel or reschedule my appointment?',\n      answer: 'Yes, you can do this from the \"Appointments\" section in your account.'\n    }]\n  };\n\n  // Toggle the chatbot\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n    setStep('main'); // Reset step to main options\n    setSelectedCategory('');\n    setMessages([]);\n  };\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setStep('sub');\n    setMessages(prev => [...prev, {\n      sender: 'bot',\n      text: `You selected ${category}. Please choose a question:`\n    }]);\n  };\n  const handleQuestionClick = (question, answer) => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: question\n    }, {\n      sender: 'bot',\n      text: answer\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"We are here to assist you with any inquiries or support. Reach out to us anytime! You can also contact us via email at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"support@edoctor.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-toggle-button\",\n        onClick: toggleChat,\n        children: \"Chat with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat with Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: toggleChat,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: [step === 'main' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-main-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a category to get started:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-option-button\",\n            onClick: () => handleCategoryClick(category),\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), step === 'sub' && selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-sub-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Here are some questions related to \", selectedCategory, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), questions[selectedCategory].map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-option-button\",\n            onClick: () => handleQuestionClick(q.question, q.answer),\n            children: q.question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setStep('main'),\n            children: \"Back to Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-messages\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n            children: message.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"/a8Ic0VjhXQz5tmXaVd5FdM1CXA=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","isChatOpen","setIsChatOpen","step","setStep","selectedCategory","setSelectedCategory","messages","setMessages","categories","questions","Login","question","answer","Register","Password","Appointment","toggleChat","handleCategoryClick","category","prev","sender","text","handleQuestionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","q","index","message","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Contact.css';\r\nimport './Chatbot.css';\r\n\r\nfunction Contact() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [step, setStep] = useState('main'); // Step: 'main' (categories), 'sub' (questions)\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Main categories\r\n  const categories = ['Login', 'Register', 'Password', 'Appointment'];\r\n\r\n  // Questions and answers based on categories\r\n  const questions = {\r\n    Login: [\r\n      { question: 'How do I log in?', answer: 'Use your registered email and password to log in.' },\r\n      { question: 'I forgot my login details.', answer: 'Click \"Forgot Password\" on the login page to recover your credentials.' },\r\n    ],\r\n    Register: [\r\n      { question: 'How do I register?', answer: 'Click the \"Register\" button on the home page and fill out the form.' },\r\n      { question: 'Why should I register?', answer: 'Registration gives you access to personalized services and appointment bookings.' },\r\n    ],\r\n    Password: [\r\n      { question: 'How do I reset my password?', answer: 'Go to the login page and click \"Forgot Password\" to reset it.' },\r\n      { question: 'How can I change my password?', answer: 'Log in to your account, go to settings, and select \"Change Password\".' },\r\n    ],\r\n    Appointment: [\r\n      { question: 'How do I book an appointment?', answer: 'Log in, select a doctor, and choose a time slot to book an appointment.' },\r\n      { question: 'Can I cancel or reschedule my appointment?', answer: 'Yes, you can do this from the \"Appointments\" section in your account.' },\r\n    ],\r\n  };\r\n\r\n  // Toggle the chatbot\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n    setStep('main'); // Reset step to main options\r\n    setSelectedCategory('');\r\n    setMessages([]);\r\n  };\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category);\r\n    setStep('sub');\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'bot', text: `You selected ${category}. Please choose a question:` },\r\n    ]);\r\n  };\r\n\r\n  const handleQuestionClick = (question, answer) => {\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'user', text: question },\r\n      { sender: 'bot', text: answer },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <div className=\"contact-content\">\r\n        <h1>Contact Us</h1>\r\n        <p>\r\n          We are here to assist you with any inquiries or support. Reach out to us anytime!\r\n          You can also contact us via email at <strong>support@edoctor.com</strong>\r\n        </p>\r\n\r\n        <button className=\"chat-toggle-button\" onClick={toggleChat}>\r\n          Chat with Us\r\n        </button>\r\n      </div>\r\n\r\n      {isChatOpen && (\r\n        <div className=\"chatbot-container\">\r\n          <div className=\"chatbot-header\">\r\n            <h3>Chat with Us</h3>\r\n            <button className=\"close-button\" onClick={toggleChat}>\r\n              ✖\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"chatbot-body\">\r\n            {step === 'main' && (\r\n              <div className=\"chatbot-main-options\">\r\n                <p>Select a category to get started:</p>\r\n                {categories.map((category) => (\r\n                  <button\r\n                    key={category}\r\n                    className=\"chat-option-button\"\r\n                    onClick={() => handleCategoryClick(category)}\r\n                  >\r\n                    {category}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {step === 'sub' && selectedCategory && (\r\n              <div className=\"chatbot-sub-options\">\r\n                <p>Here are some questions related to {selectedCategory}:</p>\r\n                {questions[selectedCategory].map((q, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"chat-option-button\"\r\n                    onClick={() => handleQuestionClick(q.question, q.answer)}\r\n                  >\r\n                    {q.question}\r\n                  </button>\r\n                ))}\r\n                <button className=\"back-button\" onClick={() => setStep('main')}>\r\n                  Back to Categories\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"chatbot-messages\">\r\n              {messages.map((message, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`message ${message.sender === 'bot' ? 'bot-message' : 'user-message'}`}\r\n                >\r\n                  {message.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}