{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [step, setStep] = useState('main'); // 'main' for main options, 'sub' for questions\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Main Categories\n  const categories = ['Login', 'Register', 'Password', 'Appointment'];\n\n  // Questions and Answers\n  const questions = {\n    Login: [{\n      question: 'How do I log in?',\n      answer: 'Use your registered email and password on the login page to access your account.'\n    }, {\n      question: 'I’m unable to log in. What should I do?',\n      answer: 'Ensure your email and password are correct. Use \"Forgot Password\" if needed.'\n    }],\n    Register: [{\n      question: 'How do I register?',\n      answer: 'Visit the registration page and fill in the required details to create an account.'\n    }, {\n      question: 'Why do I need to register?',\n      answer: 'Registration allows you to book appointments and access personalized services.'\n    }],\n    Password: [{\n      question: 'How do I reset my password?',\n      answer: 'Click the \"Forgot Password\" link on the login page and follow the instructions.'\n    }, {\n      question: 'Can I change my password?',\n      answer: 'Yes, go to your account settings and choose \"Change Password\".'\n    }],\n    Appointment: [{\n      question: 'How do I book an appointment?',\n      answer: 'Log in, select a doctor, and choose an available time slot to book your appointment.'\n    }, {\n      question: 'Can I reschedule my appointment?',\n      answer: 'Yes, log in to your account, go to \"Appointments\", and select the reschedule option.'\n    }]\n  };\n  const toggleChatbot = () => setIsOpen(!isOpen);\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setStep('sub'); // Move to sub-questions\n    setMessages(prev => [...prev, {\n      sender: 'bot',\n      text: `You selected ${category}. Please choose a question:`\n    }]);\n  };\n  const handleQuestionClick = qa => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: qa.question\n    }, {\n      sender: 'bot',\n      text: qa.answer\n    }]);\n  };\n  const handleBackClick = () => {\n    setStep('main');\n    setSelectedCategory('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-trigger\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-chatbot-btn\",\n        onClick: toggleChatbot,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chatbot-label\",\n        children: \"Chat with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"Chat with Us\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleChatbot,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-footer\",\n        children: step === 'main' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please select a category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), categories.map((category, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-category-btn\",\n            onClick: () => handleCategoryClick(category),\n            children: category\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [selectedCategory, \" Questions:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), questions[selectedCategory].map((qa, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-question-btn\",\n            onClick: () => handleQuestionClick(qa),\n            children: qa.question\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-back-btn\",\n            onClick: handleBackClick,\n            children: \"Back to Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"LhOfedMY3Cha2BOd505xe1HZ2H4=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","step","setStep","selectedCategory","setSelectedCategory","messages","setMessages","categories","questions","Login","question","answer","Register","Password","Appointment","toggleChatbot","handleCategoryClick","category","prev","sender","text","handleQuestionClick","qa","handleBackClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","idx","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [step, setStep] = useState('main'); // 'main' for main options, 'sub' for questions\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Main Categories\r\n  const categories = ['Login', 'Register', 'Password', 'Appointment'];\r\n\r\n  // Questions and Answers\r\n  const questions = {\r\n    Login: [\r\n      { question: 'How do I log in?', answer: 'Use your registered email and password on the login page to access your account.' },\r\n      { question: 'I’m unable to log in. What should I do?', answer: 'Ensure your email and password are correct. Use \"Forgot Password\" if needed.' },\r\n    ],\r\n    Register: [\r\n      { question: 'How do I register?', answer: 'Visit the registration page and fill in the required details to create an account.' },\r\n      { question: 'Why do I need to register?', answer: 'Registration allows you to book appointments and access personalized services.' },\r\n    ],\r\n    Password: [\r\n      { question: 'How do I reset my password?', answer: 'Click the \"Forgot Password\" link on the login page and follow the instructions.' },\r\n      { question: 'Can I change my password?', answer: 'Yes, go to your account settings and choose \"Change Password\".' },\r\n    ],\r\n    Appointment: [\r\n      { question: 'How do I book an appointment?', answer: 'Log in, select a doctor, and choose an available time slot to book your appointment.' },\r\n      { question: 'Can I reschedule my appointment?', answer: 'Yes, log in to your account, go to \"Appointments\", and select the reschedule option.' },\r\n    ],\r\n  };\r\n\r\n  const toggleChatbot = () => setIsOpen(!isOpen);\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category);\r\n    setStep('sub'); // Move to sub-questions\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'bot', text: `You selected ${category}. Please choose a question:` },\r\n    ]);\r\n  };\r\n\r\n  const handleQuestionClick = (qa) => {\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { sender: 'user', text: qa.question },\r\n      { sender: 'bot', text: qa.answer },\r\n    ]);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setStep('main');\r\n    setSelectedCategory('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Chatbot Trigger */}\r\n      <div className=\"chatbot-trigger\">\r\n        <button className=\"open-chatbot-btn\" onClick={toggleChatbot}>\r\n          <i className=\"fas fa-comments\"></i>\r\n        </button>\r\n        <p className=\"chatbot-label\">Chat with Us</p>\r\n      </div>\r\n\r\n      {/* Chatbot Container */}\r\n      {isOpen && (\r\n        <div className=\"chatbot-container\">\r\n          <div className=\"chatbot-header\">\r\n            Chat with Us\r\n            <span onClick={toggleChatbot}>X</span>\r\n          </div>\r\n          <div className=\"chatbot-body\">\r\n            {messages.map((msg, i) => (\r\n              <div key={i} className={`chatbot-message ${msg.sender === 'bot' ? 'bot-message' : 'user-message'}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"chatbot-footer\">\r\n            {step === 'main' ? (\r\n              <>\r\n                <h4>Please select a category:</h4>\r\n                {categories.map((category, idx) => (\r\n                  <button\r\n                    key={idx}\r\n                    className=\"chatbot-category-btn\"\r\n                    onClick={() => handleCategoryClick(category)}\r\n                  >\r\n                    {category}\r\n                  </button>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h4>{selectedCategory} Questions:</h4>\r\n                {questions[selectedCategory].map((qa, i) => (\r\n                  <button\r\n                    key={i}\r\n                    className=\"chatbot-question-btn\"\r\n                    onClick={() => handleQuestionClick(qa)}\r\n                  >\r\n                    {qa.question}\r\n                  </button>\r\n                ))}\r\n                <button className=\"chatbot-back-btn\" onClick={handleBackClick}>\r\n                  Back to Categories\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}