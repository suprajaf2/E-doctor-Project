{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.SUPRAJA\\\\Documents\\\\Infosys  E-doctor\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Hardcoded admin credentials\n  const adminCredentials = {\n    username: 'admin',\n    // Admin username\n    password: 'admin123' // Admin password\n  };\n\n  // Handle forgot password logic (for now, just logging the action)\n  const handleForgotPassword = () => {\n    alert('Forgot password functionality not implemented yet.');\n    // You can replace this with actual logic for sending a reset link or emailing the user\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Check for admin login\n    if (username === adminCredentials.username && password === adminCredentials.password) {\n      // Admin login successful, navigate to dashboard\n      console.log(\"Admin login successful\", username);\n      alert('Admin login successful!');\n      navigate('/dashboard'); // Redirect to the admin dashboard\n      return; // Exit the function here to prevent further checks for other users\n    }\n\n    // Retrieve the stored user data from localStorage for normal users\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n\n    // Validate the login credentials for normal users\n    if (storedUser && storedUser.username === username && storedUser.password === password) {\n      console.log(\"Login successful:\", storedUser);\n      alert('Login successful!');\n      navigate('/dashboard'); // Redirect to the dashboard\n    } else {\n      console.log(\"Login failed. Invalid username or password.\");\n      alert('Invalid username or password!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleForgotPassword,\n        className: \"forgot-password-button\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","adminCredentials","handleForgotPassword","alert","handleLogin","e","preventDefault","console","log","storedUser","JSON","parse","localStorage","getItem","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","target","required","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M.SUPRAJA/Documents/Infosys  E-doctor/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Hardcoded admin credentials\r\n  const adminCredentials = {\r\n    username: 'admin', // Admin username\r\n    password: 'admin123', // Admin password\r\n  };\r\n\r\n  // Handle forgot password logic (for now, just logging the action)\r\n  const handleForgotPassword = () => {\r\n    alert('Forgot password functionality not implemented yet.');\r\n    // You can replace this with actual logic for sending a reset link or emailing the user\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check for admin login\r\n    if (username === adminCredentials.username && password === adminCredentials.password) {\r\n      // Admin login successful, navigate to dashboard\r\n      console.log(\"Admin login successful\",username);\r\n      alert('Admin login successful!');\r\n      navigate('/dashboard');  // Redirect to the admin dashboard\r\n      return; // Exit the function here to prevent further checks for other users\r\n    }\r\n\r\n    // Retrieve the stored user data from localStorage for normal users\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // Validate the login credentials for normal users\r\n    if (storedUser && storedUser.username === username && storedUser.password === password) {\r\n      console.log(\"Login successful:\", storedUser);\r\n      alert('Login successful!');\r\n      navigate('/dashboard');  // Redirect to the dashboard\r\n    } else {\r\n      console.log(\"Login failed. Invalid username or password.\");\r\n      alert('Invalid username or password!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h2>Login</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        <p>New user? <a href=\"/register\">Register here</a></p>\r\n\r\n        {/* Forgot Password button */}\r\n        <button type=\"button\" onClick={handleForgotPassword} className=\"forgot-password-button\">\r\n          Forgot Password?\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}